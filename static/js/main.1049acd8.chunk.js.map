{"version":3,"sources":["components/webcam/webcam.js","components/form/form.js","components/NavBar/NavBar.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["h","height","WebCam","props","setRef","webcam","capture","imageSrc","getScreenshot","setState","image","onChange","state","takeScreenShot","bind","e","preventDefault","className","audio","ref","this","screenshotFormat","width","videoConstraints","facingMode","type","onClick","style","src","React","Component","Form","maskId","v4","name","phone","postCode","result","handleSubmit","handleNameChange","handlePhoneChange","handlePostCodeChange","handleImageChange","target","value","img","console","log","errorMessage","length","alert","fetch","method","headers","body","JSON","stringify","postcode","then","response","json","data","success","onSubmit","userName","NavBar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1049acd8.chunk.js","sourcesContent":["import React from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst h = {\n  height: 100,\n};\nclass WebCam extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { image: \"\" };\n    this.takeScreenShot = this.takeScreenShot.bind(this);\n  }\n\n  takeScreenShot(e) {\n    e.preventDefault();\n  }\n\n  /* capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]);\n\n  render() {\n    return (\n      <div>\n        <Webcam value={this.state.snapShot} onChange={this.takeScreenShot} />\n      </div>\n    );\n  } */\n  setRef = (webcam) => {\n    this.webcam = webcam;\n  };\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot();\n    this.setState({ image: imageSrc });\n    this.props.onChange(imageSrc);\n    return false;\n  };\n\n  render() {\n    const videoConstraints = {\n      width: 1280,\n      height: 720,\n      facingMode: \"user\",\n    };\n\n    return (\n      <div className=\"row my-3 pt-3\">\n        <label className=\"col-3 \">Picture: </label>\n        <Webcam\n          audio={false}\n          height={350}\n          ref={this.setRef}\n          screenshotFormat=\"image/jpeg\"\n          width={550}\n          videoConstraints={videoConstraints}\n          className=\"col-5\"\n        />\n        <button type=\"button\" className=\"col-2 my-3\" onClick={this.capture} style={h}>\n          Capture photo\n        </button>\n        <img src={this.state.image} />\n      </div>\n    );\n  }\n}\n\nexport default WebCam;\n","import React from \"react\";\n\nimport WebCam from \"../webcam/webcam\";\nimport \"./form.css\";\n\nimport { v4 } from \"uuid\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    let maskId = null;\n    if (props.maskId)\n    {\n      maskId = props.maskId;\n    }\n    else\n    {\n      //generate a random UUID for the purpose of demo if one is not passed in\n      maskId = v4(); \n    }\n    this.state = {\n      name: \"\",\n      phone: \"\",\n      postCode: \"\",\n      maskId: maskId,\n      image: \"\",\n      result: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    this.handlePostCodeChange = this.handlePostCodeChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleNameChange(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n  handlePhoneChange(e) {\n    this.setState({\n      phone: e.target.value,\n    });\n  }\n  handlePostCodeChange(e) {\n    this.setState({\n      postCode: e.target.value,\n    });\n  }\n\n  handleImageChange(img) {\n    console.log(\"image changed\");\n    this.setState({ image: img });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    let errorMessage = '';\n    if (!this.state.name)\n    {\n      errorMessage += 'Name must be supplied';\n    }\n    if (!this.state.phone)\n    {\n      errorMessage += 'Phone must be supplied';\n    }\n    if (!this.state.postCode)\n    {\n      errorMessage += 'Post Code must be supplied';\n    }\n    if (!this.state.image)\n    {\n      errorMessage += 'A photo must be supplied';\n    }\n    if (!this.state.maskId)\n    {\n      errorMessage += 'A Mask ID must be supplied - you may need to reload the page by scanning the QR again';\n    }\n\n    if (errorMessage && errorMessage.length > 0)\n    {\n      alert(`Please correct the following and try again: ${errorMessage}`);\n    }\n    else{\n      fetch(\n      \"https://n4xy6udiic.execute-api.ap-southeast-2.amazonaws.com/dev/checkin\",\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: this.state.name,\n          phone: this.state.phone,\n          postcode: this.state.postCode, //note in API the C is lower case..\n          image: this.state.image,\n          maskId: this.state.maskId,\n        }),\n      }\n    )\n    .then((response) => response.json())\n    .then((data) => {\n        console.log(\"The result from API is \", data);\n        this.setState({ result: data.response.success });\n        console.log(\"the result is succesful: \", data.response.success);\n        if (data.response.success)\n        {\n          //TODO: we should use react to make this a nice message on the screen and clear the form.\n          //We don't want them to be able to submit more than once becuase the MaskID must be unique.\n          alert(`Thank you for checking in, enjoy your visit!`);\n        }\n        else\n        {\n          alert(`There was a problem checking you in, please see your friendly checkin staff for assistance`);\n        }\n      });\n    }\n  }\n\n  render() {\n    const { postCode } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className=\"formborder\">\n        <div className=\"row pt-3 my-3\">\n          <label className=\"col-3\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control col-5\"\n            value={this.state.userName}\n            onChange={this.handleNameChange}\n          />\n        </div>\n        <div className=\"row my-3 pt-3\">\n          <label className=\"col-3\">Phone: </label>\n          <input\n            type=\"tel\"\n            className=\"form-control col-5\"\n            value={this.state.phone}\n            onChange={this.handlePhoneChange}\n          />\n        </div>\n        <div className=\"row my-3 pt-3\">\n          <label className=\"col-3\">Post Code: </label>\n          <input\n            type=\"text\"\n            className=\"form-control col-5\"\n            value={postCode}\n            onChange={this.handlePostCodeChange}\n          />\n        </div>\n        <WebCam onChange={this.handleImageChange} />\n        <div className=\"row centered\">\n          <button type=\"submit\" value=\"Submit\" className=\"btn btn-info col-5\">\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import React from \"react\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Capture Form\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                Capture details\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                About\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"#\">\n                Help\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport \"./App.css\";\n\nimport Form from \"../form/form\";\nimport NavBar from \"../NavBar/NavBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container my-3 pt-3\">\n          <NavBar />\n          <Form />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}