{"version":3,"sources":["components/webcam/webcam.js","components/form/form.js","components/NavBar/NavBar.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["h","height","top","WebCam","props","setRef","webcam","capture","imageSrc","getScreenshot","setState","image","onChange","state","takeScreenShot","bind","e","preventDefault","className","class","audio","ref","this","screenshotFormat","width","videoConstraints","facingMode","type","onClick","style","src","React","Component","Form","resetForm","name","phone","postCode","maskId","v4","infVac","isHealthCare","message","result","handleSubmit","handleNameChange","handlePhoneChange","handlePostCodeChange","handleInfVacChange","handleHWChange","handleImageChange","displayStaticInfo","target","value","startsWith","img","console","log","errorMessage","length","alert","fetch","method","headers","body","JSON","stringify","postcode","then","response","json","data","success","document","getElementById","reset","id","onReset","onSubmit","userName","onBlur","outline","marginLeft","NavBar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8600acb5.chunk.js","sourcesContent":["import React from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst h = {\n  height: 90,\n  top: 30,\n};\nclass WebCam extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { image: \"\" };\n    this.takeScreenShot = this.takeScreenShot.bind(this);\n  }\n\n  takeScreenShot(e) {\n    e.preventDefault();\n  }\n\n  setRef = (webcam) => {\n    this.webcam = webcam;\n  };\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot();\n    this.setState({ image: imageSrc });\n    this.props.onChange(imageSrc);\n    return false;\n  };\n\n  render() {\n    const videoConstraints = {\n      width: 1280,\n      height: 720,\n      facingMode: \"user\",\n    };\n\n    return (\n      <div>\n        <label className=\"row\">Picture: </label>\n        <div class=\"row\">\n          <Webcam\n            audio={false}\n            height={350}\n            ref={this.setRef}\n            screenshotFormat=\"image/jpeg\"\n            width={550}\n            videoConstraints={videoConstraints}\n            className=\"col-6\"\n          />\n          <button\n            type=\"button\"\n            className=\"col-3\"\n            onClick={this.capture}\n            style={h}\n          >\n            Capture photo\n          </button>\n        </div>\n        <div className=\"row\">\n          <img className=\"col-6\" src={this.state.image} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WebCam;\n","import React from \"react\";\n\nimport WebCam from \"../webcam/webcam\";\nimport \"./form.css\";\n\nimport { v4 } from \"uuid\";\nconst bc = {\n  borderColor: \"grey\",\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    let maskId = null;\n    if (props.maskId) {\n      maskId = props.maskId;\n    } else {\n      //generate a random UUID for the purpose of demo if one is not passed in\n      maskId = v4();\n    }\n    this.state = {\n      name: \"\",\n      phone: \"\",\n      postCode: \"\",\n      infVac: \"\",\n      isHealthCare: \"\",\n      message: \"\",\n      maskId: maskId,\n      image: \"\",\n      result: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    this.handlePostCodeChange = this.handlePostCodeChange.bind(this);\n    this.handleInfVacChange = this.handleInfVacChange.bind(this);\n    this.handleHWChange = this.handleHWChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.displayStaticInfo = this.displayStaticInfo.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleNameChange(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n  handlePhoneChange(e) {\n    this.setState({\n      phone: e.target.value,\n    });\n  }\n  handlePostCodeChange(e) {\n    this.setState({\n      postCode: e.target.value,\n    });\n  }\n\n  displayStaticInfo() {\n    if (this.state.postCode.startsWith(\"48\")) {\n      this.setState({\n        message: `Cairns has a very high incidence of influenza\n      Please sanitise hands\n      Please wear mask`,\n      });\n    } else {\n      this.setState({ message: \"\" });\n    }\n  }\n  handleInfVacChange(e) {\n    this.setState({\n      infVac: e.target.value,\n    });\n  }\n  handleHWChange(e) {\n    this.setState({ isHealthCare: e.target.value });\n  }\n  handleImageChange(img) {\n    console.log(\"image changed\");\n    this.setState({ image: img });\n  }\n  resetForm = () => {\n    this.setState({ name: \"\" });\n    this.setState({ phone: \"\" });\n    this.setState({ postCode: \"\" });\n    this.setState({ image: \"\" });\n  };\n  handleSubmit(e) {\n    e.preventDefault();\n    let errorMessage = \"\";\n    if (!this.state.name) {\n      errorMessage += \"Name must be supplied\";\n    }\n    if (!this.state.phone) {\n      errorMessage += \"Phone must be supplied\";\n    }\n    if (!this.state.postCode) {\n      errorMessage += \"Post Code must be supplied\";\n    }\n    if (!this.state.infVac) {\n      errorMessage += \"Vaccination details must be supplied\";\n    }\n    if (!this.state.image) {\n      errorMessage += \"A photo must be supplied\";\n    }\n    if (!this.state.maskId) {\n      errorMessage +=\n        \"A Mask ID must be supplied - you may need to reload the page by scanning the QR again\";\n    }\n\n    if (errorMessage && errorMessage.length > 0) {\n      alert(`Please correct the following and try again: ${errorMessage}`);\n    } else {\n      fetch(\n        \"https://n4xy6udiic.execute-api.ap-southeast-2.amazonaws.com/dev/checkin\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            name: this.state.name,\n            phone: this.state.phone,\n            postcode: this.state.postCode, //note in API the C is lower case..\n            infVac: this.state.infVac,\n            image: this.state.image,\n            maskId: this.state.maskId,\n          }),\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"The result from API is \", data);\n          this.setState({ result: data.response.success });\n          console.log(\"the result is succesful: \", data.response.success);\n          if (data.response.success) {\n            //TODO: we should use react to make this a nice message on the screen and clear the form.\n            //We don't want them to be able to submit more than once becuase the MaskID must be unique.\n            alert(`Thank you for checking in, enjoy your visit!`);\n            document.getElementById(\"myform\").reset();\n          } else {\n            alert(\n              `There was a problem checking you in, please see your friendly checkin staff for assistance`\n            );\n            this.setState({ result: \"fail\" });\n          }\n        });\n    }\n  }\n\n  render() {\n    const { postCode, infVac, isHealthCare, message } = this.state;\n    return (\n      <form\n        id=\"myform\"\n        onReset={this.resetForm}\n        onSubmit={this.handleSubmit}\n        className=\"formborder container\"\n      >\n        <div className=\"pt-3\">\n          <label className=\"row\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control row\"\n            value={this.state.userName}\n            onChange={this.handleNameChange}\n          />\n        </div>\n        <div className=\" pt-3\">\n          <label className=\"row\">Phone: </label>\n          <input\n            type=\"tel\"\n            className=\"form-control row\"\n            value={this.state.phone}\n            onChange={this.handlePhoneChange}\n          />\n        </div>\n        <div className=\"pt-3\">\n          <label className=\"row\">Post Code: </label>\n          <input\n            type=\"text\"\n            className=\"form-control row\"\n            value={postCode}\n            onChange={this.handlePostCodeChange}\n            onBlur={this.displayStaticInfo}\n          />\n          <p className=\"row\">{message}</p>\n        </div>\n        <div className=\" row my-3 pt-3\">\n          <label className=\"col-3\"> Influenza Vaccination </label>\n          <div className=\"col-2 yes\">\n            <label className=\"col-1\"> Yes </label>\n            <input\n              type=\"checkbox\"\n              className=\"form-control col-1 \"\n              style={{ outline: \"none\", marginLeft: 14 }}\n              value=\"yes\"\n              onChange={this.handleInfVacChange}\n            />\n          </div>\n          <div className=\"col-2 yes\">\n            <label className=\"col-1\"> No </label>\n            <input\n              type=\"checkbox\"\n              className=\"form-control col-1 \"\n              style={{ outline: \"none\", marginLeft: 16 }}\n              value=\"no\"\n              onChange={this.handleInfVacChange}\n            />\n          </div>\n        </div>\n        <div className=\"row my-3 pt-3\">\n          <label className=\"col-3\"> Are you a healthcare worker </label>\n          <div className=\"col-2 yes\">\n            <label className=\"col-1\"> Yes </label>\n            <input\n              type=\"checkbox\"\n              className=\"form-control col-1\"\n              style={{ outline: \"none\", marginLeft: 16 }}\n              value={isHealthCare}\n              onChange={this.handleHWChange}\n            />\n          </div>\n          <div className=\"col-2 yes\">\n            <label className=\"col-1\"> No </label>\n            <input\n              type=\"checkbox\"\n              className=\"form-control col-1\"\n              style={{ outline: \"none\", marginLeft: 17 }}\n              value={isHealthCare}\n              onChange={this.handleHWChange}\n            />\n          </div>\n        </div>\n        <WebCam onChange={this.handleImageChange} />\n        <div className=\" my-3\">\n          <label className=\"row\"></label>\n          <button\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn btn-info btn-block row\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import React from \"react\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Capture Form\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                Capture details\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                About\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"#\">\n                Help\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport \"./App.css\";\n\nimport Form from \"../form/form\";\nimport NavBar from \"../NavBar/NavBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container my-3 pt-3\">\n          <NavBar />\n          <Form />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}